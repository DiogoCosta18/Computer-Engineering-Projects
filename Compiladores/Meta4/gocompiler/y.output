Terminals unused in grammar

    RESERVED


Grammar

    0 $accept: program $end

    1 program: PACKAGE IDENTIFIER SEMICOLON declarations

    2 declarations: declarations vardeclaration SEMICOLON
    3             | declarations funcdeclaration SEMICOLON
    4             | ε

    5 vardeclaration: VAR varspec
    6               | VAR LPAR varspec SEMICOLON RPAR

    7 varspec: IDENTIFIER varspec2 type

    8 varspec2: varspec2 COMMA IDENTIFIER
    9         | ε

   10 type: INT
   11     | FLOAT32
   12     | BOOL
   13     | STRING

   14 funcdeclaration: FUNC IDENTIFIER LPAR parameters RPAR type funcbody
   15                | FUNC IDENTIFIER LPAR parameters RPAR funcbody

   16 parameters: IDENTIFIER type parameters2
   17           | ε

   18 parameters2: parameters2 COMMA IDENTIFIER type
   19            | ε

   20 funcbody: LBRACE varsandstatements RBRACE

   21 varsandstatements: varsandstatements SEMICOLON
   22                  | varsandstatements vardeclaration SEMICOLON
   23                  | varsandstatements statement SEMICOLON
   24                  | ε

   25 statement: IDENTIFIER ASSIGN expr
   26          | LBRACE statement2 RBRACE
   27          | IF expr LBRACE statement2 RBRACE ELSE LBRACE statement2 RBRACE
   28          | IF expr LBRACE statement2 RBRACE
   29          | FOR expr LBRACE statement2 RBRACE
   30          | FOR LBRACE statement2 RBRACE
   31          | RETURN expr
   32          | RETURN
   33          | funcinvocation
   34          | parseargs
   35          | PRINT LPAR expr RPAR
   36          | PRINT LPAR STRLIT RPAR
   37          | error

   38 statement2: statement2 statement SEMICOLON
   39           | ε

   40 parseargs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ expr RSQ RPAR
   41          | IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR

   42 funcinvocation: IDENTIFIER LPAR expr funcinvocation2 RPAR
   43               | IDENTIFIER LPAR RPAR
   44               | IDENTIFIER LPAR error RPAR

   45 funcinvocation2: funcinvocation2 COMMA expr
   46                | ε

   47 expr: expr OR expr
   48     | expr AND expr
   49     | expr LT expr
   50     | expr GT expr
   51     | expr EQ expr
   52     | expr NE expr
   53     | expr LE expr
   54     | expr GE expr
   55     | expr PLUS expr
   56     | expr MINUS expr
   57     | expr STAR expr
   58     | expr DIV expr
   59     | expr MOD expr
   60     | NOT expr
   61     | MINUS expr
   62     | PLUS expr
   63     | NATURAL
   64     | DECIMAL
   65     | IDENTIFIER
   66     | funcinvocation
   67     | LPAR expr RPAR
   68     | LPAR error RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256) 37 41 44 68
    SEMICOLON (258) 1 2 3 6 21 22 23 38
    COMMA (259) 8 18 40 41 45
    BLANKID (260) 40 41
    ASSIGN (261) 25 40 41
    STAR (262) 57
    DIV (263) 58
    MINUS (264) 56 61
    PLUS (265) 55 62
    EQ (266) 51
    GE (267) 54
    GT (268) 50
    LBRACE (269) 20 26 27 28 29 30
    LE (270) 53
    LPAR (271) 6 14 15 35 36 40 41 42 43 44 67 68
    LSQ (272) 40
    LT (273) 49
    MOD (274) 59
    NE (275) 52
    NOT (276) 60
    AND (277) 48
    OR (278) 47
    RBRACE (279) 20 26 27 28 29 30
    RPAR (280) 6 14 15 35 36 40 41 42 43 44 67 68
    RSQ (281) 40
    PACKAGE (282) 1
    RETURN (283) 31 32
    ELSE (284) 27
    FOR (285) 29 30
    IF (286) 27 28
    VAR (287) 5 6
    INT (288) 10
    FLOAT32 (289) 11
    BOOL (290) 12
    STRING (291) 13
    PRINT (292) 35 36
    PARSEINT (293) 40 41
    FUNC (294) 14 15
    CMDARGS (295) 40
    RESERVED (296)
    IDENTIFIER <lexeme> (297) 1 7 8 14 15 16 18 25 40 41 42 43 44 65
    NATURAL <lexeme> (298) 63
    DECIMAL <lexeme> (299) 64
    STRLIT <lexeme> (300) 36
    MINUS_SOZINHO (301)
    PLUS_SOZINHO (302)


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program <node> (49)
        on left: 1
        on right: 0
    declarations <node> (50)
        on left: 2 3 4
        on right: 1 2 3
    vardeclaration <node> (51)
        on left: 5 6
        on right: 2 22
    varspec <node> (52)
        on left: 7
        on right: 5 6
    varspec2 <node> (53)
        on left: 8 9
        on right: 7 8
    type <node> (54)
        on left: 10 11 12 13
        on right: 7 14 16 18
    funcdeclaration <node> (55)
        on left: 14 15
        on right: 3
    parameters <node> (56)
        on left: 16 17
        on right: 14 15
    parameters2 <node> (57)
        on left: 18 19
        on right: 16 18
    funcbody <node> (58)
        on left: 20
        on right: 14 15
    varsandstatements <node> (59)
        on left: 21 22 23 24
        on right: 20 21 22 23
    statement <node> (60)
        on left: 25 26 27 28 29 30 31 32 33 34 35 36 37
        on right: 23 38
    statement2 <node> (61)
        on left: 38 39
        on right: 26 27 28 29 30 38
    parseargs <node> (62)
        on left: 40 41
        on right: 34
    funcinvocation <node> (63)
        on left: 42 43 44
        on right: 33 66
    funcinvocation2 <node> (64)
        on left: 45 46
        on right: 42 45
    expr <node> (65)
        on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
        on right: 25 27 28 29 31 35 40 42 45 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 67


State 0

    0 $accept: • program $end

    PACKAGE  shift, and go to state 1

    program  go to state 2


State 1

    1 program: PACKAGE • IDENTIFIER SEMICOLON declarations

    IDENTIFIER  shift, and go to state 3


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: PACKAGE IDENTIFIER • SEMICOLON declarations

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: program $end •

    $default  accept


State 5

    1 program: PACKAGE IDENTIFIER SEMICOLON • declarations

    $default  reduce using rule 4 (declarations)

    declarations  go to state 6


State 6

    1 program: PACKAGE IDENTIFIER SEMICOLON declarations •
    2 declarations: declarations • vardeclaration SEMICOLON
    3             | declarations • funcdeclaration SEMICOLON

    VAR   shift, and go to state 7
    FUNC  shift, and go to state 8

    $default  reduce using rule 1 (program)

    vardeclaration   go to state 9
    funcdeclaration  go to state 10


State 7

    5 vardeclaration: VAR • varspec
    6               | VAR • LPAR varspec SEMICOLON RPAR

    LPAR        shift, and go to state 11
    IDENTIFIER  shift, and go to state 12

    varspec  go to state 13


State 8

   14 funcdeclaration: FUNC • IDENTIFIER LPAR parameters RPAR type funcbody
   15                | FUNC • IDENTIFIER LPAR parameters RPAR funcbody

    IDENTIFIER  shift, and go to state 14


State 9

    2 declarations: declarations vardeclaration • SEMICOLON

    SEMICOLON  shift, and go to state 15


State 10

    3 declarations: declarations funcdeclaration • SEMICOLON

    SEMICOLON  shift, and go to state 16


State 11

    6 vardeclaration: VAR LPAR • varspec SEMICOLON RPAR

    IDENTIFIER  shift, and go to state 12

    varspec  go to state 17


State 12

    7 varspec: IDENTIFIER • varspec2 type

    $default  reduce using rule 9 (varspec2)

    varspec2  go to state 18


State 13

    5 vardeclaration: VAR varspec •

    $default  reduce using rule 5 (vardeclaration)


State 14

   14 funcdeclaration: FUNC IDENTIFIER • LPAR parameters RPAR type funcbody
   15                | FUNC IDENTIFIER • LPAR parameters RPAR funcbody

    LPAR  shift, and go to state 19


State 15

    2 declarations: declarations vardeclaration SEMICOLON •

    $default  reduce using rule 2 (declarations)


State 16

    3 declarations: declarations funcdeclaration SEMICOLON •

    $default  reduce using rule 3 (declarations)


State 17

    6 vardeclaration: VAR LPAR varspec • SEMICOLON RPAR

    SEMICOLON  shift, and go to state 20


State 18

    7 varspec: IDENTIFIER varspec2 • type
    8 varspec2: varspec2 • COMMA IDENTIFIER

    COMMA    shift, and go to state 21
    INT      shift, and go to state 22
    FLOAT32  shift, and go to state 23
    BOOL     shift, and go to state 24
    STRING   shift, and go to state 25

    type  go to state 26


State 19

   14 funcdeclaration: FUNC IDENTIFIER LPAR • parameters RPAR type funcbody
   15                | FUNC IDENTIFIER LPAR • parameters RPAR funcbody

    IDENTIFIER  shift, and go to state 27

    $default  reduce using rule 17 (parameters)

    parameters  go to state 28


State 20

    6 vardeclaration: VAR LPAR varspec SEMICOLON • RPAR

    RPAR  shift, and go to state 29


State 21

    8 varspec2: varspec2 COMMA • IDENTIFIER

    IDENTIFIER  shift, and go to state 30


State 22

   10 type: INT •

    $default  reduce using rule 10 (type)


State 23

   11 type: FLOAT32 •

    $default  reduce using rule 11 (type)


State 24

   12 type: BOOL •

    $default  reduce using rule 12 (type)


State 25

   13 type: STRING •

    $default  reduce using rule 13 (type)


State 26

    7 varspec: IDENTIFIER varspec2 type •

    $default  reduce using rule 7 (varspec)


State 27

   16 parameters: IDENTIFIER • type parameters2

    INT      shift, and go to state 22
    FLOAT32  shift, and go to state 23
    BOOL     shift, and go to state 24
    STRING   shift, and go to state 25

    type  go to state 31


State 28

   14 funcdeclaration: FUNC IDENTIFIER LPAR parameters • RPAR type funcbody
   15                | FUNC IDENTIFIER LPAR parameters • RPAR funcbody

    RPAR  shift, and go to state 32


State 29

    6 vardeclaration: VAR LPAR varspec SEMICOLON RPAR •

    $default  reduce using rule 6 (vardeclaration)


State 30

    8 varspec2: varspec2 COMMA IDENTIFIER •

    $default  reduce using rule 8 (varspec2)


State 31

   16 parameters: IDENTIFIER type • parameters2

    $default  reduce using rule 19 (parameters2)

    parameters2  go to state 33


State 32

   14 funcdeclaration: FUNC IDENTIFIER LPAR parameters RPAR • type funcbody
   15                | FUNC IDENTIFIER LPAR parameters RPAR • funcbody

    LBRACE   shift, and go to state 34
    INT      shift, and go to state 22
    FLOAT32  shift, and go to state 23
    BOOL     shift, and go to state 24
    STRING   shift, and go to state 25

    type      go to state 35
    funcbody  go to state 36


State 33

   16 parameters: IDENTIFIER type parameters2 •
   18 parameters2: parameters2 • COMMA IDENTIFIER type

    COMMA  shift, and go to state 37

    $default  reduce using rule 16 (parameters)


State 34

   20 funcbody: LBRACE • varsandstatements RBRACE

    $default  reduce using rule 24 (varsandstatements)

    varsandstatements  go to state 38


State 35

   14 funcdeclaration: FUNC IDENTIFIER LPAR parameters RPAR type • funcbody

    LBRACE  shift, and go to state 34

    funcbody  go to state 39


State 36

   15 funcdeclaration: FUNC IDENTIFIER LPAR parameters RPAR funcbody •

    $default  reduce using rule 15 (funcdeclaration)


State 37

   18 parameters2: parameters2 COMMA • IDENTIFIER type

    IDENTIFIER  shift, and go to state 40


State 38

   20 funcbody: LBRACE varsandstatements • RBRACE
   21 varsandstatements: varsandstatements • SEMICOLON
   22                  | varsandstatements • vardeclaration SEMICOLON
   23                  | varsandstatements • statement SEMICOLON

    error       shift, and go to state 41
    SEMICOLON   shift, and go to state 42
    LBRACE      shift, and go to state 43
    RBRACE      shift, and go to state 44
    RETURN      shift, and go to state 45
    FOR         shift, and go to state 46
    IF          shift, and go to state 47
    VAR         shift, and go to state 7
    PRINT       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    vardeclaration  go to state 50
    statement       go to state 51
    parseargs       go to state 52
    funcinvocation  go to state 53


State 39

   14 funcdeclaration: FUNC IDENTIFIER LPAR parameters RPAR type funcbody •

    $default  reduce using rule 14 (funcdeclaration)


State 40

   18 parameters2: parameters2 COMMA IDENTIFIER • type

    INT      shift, and go to state 22
    FLOAT32  shift, and go to state 23
    BOOL     shift, and go to state 24
    STRING   shift, and go to state 25

    type  go to state 54


State 41

   37 statement: error •

    $default  reduce using rule 37 (statement)


State 42

   21 varsandstatements: varsandstatements SEMICOLON •

    $default  reduce using rule 21 (varsandstatements)


State 43

   26 statement: LBRACE • statement2 RBRACE

    $default  reduce using rule 39 (statement2)

    statement2  go to state 55


State 44

   20 funcbody: LBRACE varsandstatements RBRACE •

    $default  reduce using rule 20 (funcbody)


State 45

   31 statement: RETURN • expr
   32          | RETURN •

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    $default  reduce using rule 32 (statement)

    funcinvocation  go to state 63
    expr            go to state 64


State 46

   29 statement: FOR • expr LBRACE statement2 RBRACE
   30          | FOR • LBRACE statement2 RBRACE

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LBRACE      shift, and go to state 65
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 66


State 47

   27 statement: IF • expr LBRACE statement2 RBRACE ELSE LBRACE statement2 RBRACE
   28          | IF • expr LBRACE statement2 RBRACE

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 67


State 48

   35 statement: PRINT • LPAR expr RPAR
   36          | PRINT • LPAR STRLIT RPAR

    LPAR  shift, and go to state 68


State 49

   25 statement: IDENTIFIER • ASSIGN expr
   40 parseargs: IDENTIFIER • COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ expr RSQ RPAR
   41          | IDENTIFIER • COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR
   42 funcinvocation: IDENTIFIER • LPAR expr funcinvocation2 RPAR
   43               | IDENTIFIER • LPAR RPAR
   44               | IDENTIFIER • LPAR error RPAR

    COMMA   shift, and go to state 69
    ASSIGN  shift, and go to state 70
    LPAR    shift, and go to state 71


State 50

   22 varsandstatements: varsandstatements vardeclaration • SEMICOLON

    SEMICOLON  shift, and go to state 72


State 51

   23 varsandstatements: varsandstatements statement • SEMICOLON

    SEMICOLON  shift, and go to state 73


State 52

   34 statement: parseargs •

    $default  reduce using rule 34 (statement)


State 53

   33 statement: funcinvocation •

    $default  reduce using rule 33 (statement)


State 54

   18 parameters2: parameters2 COMMA IDENTIFIER type •

    $default  reduce using rule 18 (parameters2)


State 55

   26 statement: LBRACE statement2 • RBRACE
   38 statement2: statement2 • statement SEMICOLON

    error       shift, and go to state 41
    LBRACE      shift, and go to state 43
    RBRACE      shift, and go to state 74
    RETURN      shift, and go to state 45
    FOR         shift, and go to state 46
    IF          shift, and go to state 47
    PRINT       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    statement       go to state 75
    parseargs       go to state 52
    funcinvocation  go to state 53


State 56

   61 expr: MINUS • expr

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 76


State 57

   62 expr: PLUS • expr

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 77


State 58

   67 expr: LPAR • expr RPAR
   68     | LPAR • error RPAR

    error       shift, and go to state 78
    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 79


State 59

   60 expr: NOT • expr

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 80


State 60

   42 funcinvocation: IDENTIFIER • LPAR expr funcinvocation2 RPAR
   43               | IDENTIFIER • LPAR RPAR
   44               | IDENTIFIER • LPAR error RPAR
   65 expr: IDENTIFIER •

    LPAR  shift, and go to state 71

    $default  reduce using rule 65 (expr)


State 61

   63 expr: NATURAL •

    $default  reduce using rule 63 (expr)


State 62

   64 expr: DECIMAL •

    $default  reduce using rule 64 (expr)


State 63

   66 expr: funcinvocation •

    $default  reduce using rule 66 (expr)


State 64

   31 statement: RETURN expr •
   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    EQ     shift, and go to state 85
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93

    $default  reduce using rule 31 (statement)


State 65

   30 statement: FOR LBRACE • statement2 RBRACE

    $default  reduce using rule 39 (statement2)

    statement2  go to state 94


State 66

   29 statement: FOR expr • LBRACE statement2 RBRACE
   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr

    STAR    shift, and go to state 81
    DIV     shift, and go to state 82
    MINUS   shift, and go to state 83
    PLUS    shift, and go to state 84
    EQ      shift, and go to state 85
    GE      shift, and go to state 86
    GT      shift, and go to state 87
    LBRACE  shift, and go to state 95
    LE      shift, and go to state 88
    LT      shift, and go to state 89
    MOD     shift, and go to state 90
    NE      shift, and go to state 91
    AND     shift, and go to state 92
    OR      shift, and go to state 93


State 67

   27 statement: IF expr • LBRACE statement2 RBRACE ELSE LBRACE statement2 RBRACE
   28          | IF expr • LBRACE statement2 RBRACE
   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr

    STAR    shift, and go to state 81
    DIV     shift, and go to state 82
    MINUS   shift, and go to state 83
    PLUS    shift, and go to state 84
    EQ      shift, and go to state 85
    GE      shift, and go to state 86
    GT      shift, and go to state 87
    LBRACE  shift, and go to state 96
    LE      shift, and go to state 88
    LT      shift, and go to state 89
    MOD     shift, and go to state 90
    NE      shift, and go to state 91
    AND     shift, and go to state 92
    OR      shift, and go to state 93


State 68

   35 statement: PRINT LPAR • expr RPAR
   36          | PRINT LPAR • STRLIT RPAR

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62
    STRLIT      shift, and go to state 97

    funcinvocation  go to state 63
    expr            go to state 98


State 69

   40 parseargs: IDENTIFIER COMMA • BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ expr RSQ RPAR
   41          | IDENTIFIER COMMA • BLANKID ASSIGN PARSEINT LPAR error RPAR

    BLANKID  shift, and go to state 99


State 70

   25 statement: IDENTIFIER ASSIGN • expr

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 100


State 71

   42 funcinvocation: IDENTIFIER LPAR • expr funcinvocation2 RPAR
   43               | IDENTIFIER LPAR • RPAR
   44               | IDENTIFIER LPAR • error RPAR

    error       shift, and go to state 101
    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    RPAR        shift, and go to state 102
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 103


State 72

   22 varsandstatements: varsandstatements vardeclaration SEMICOLON •

    $default  reduce using rule 22 (varsandstatements)


State 73

   23 varsandstatements: varsandstatements statement SEMICOLON •

    $default  reduce using rule 23 (varsandstatements)


State 74

   26 statement: LBRACE statement2 RBRACE •

    $default  reduce using rule 26 (statement)


State 75

   38 statement2: statement2 statement • SEMICOLON

    SEMICOLON  shift, and go to state 104


State 76

   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr
   61     | MINUS expr •

    $default  reduce using rule 61 (expr)


State 77

   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr
   62     | PLUS expr •

    $default  reduce using rule 62 (expr)


State 78

   68 expr: LPAR error • RPAR

    RPAR  shift, and go to state 105


State 79

   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr
   67     | LPAR expr • RPAR

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    EQ     shift, and go to state 85
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93
    RPAR   shift, and go to state 106


State 80

   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr
   60     | NOT expr •

    $default  reduce using rule 60 (expr)


State 81

   57 expr: expr STAR • expr

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 107


State 82

   58 expr: expr DIV • expr

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 108


State 83

   56 expr: expr MINUS • expr

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 109


State 84

   55 expr: expr PLUS • expr

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 110


State 85

   51 expr: expr EQ • expr

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 111


State 86

   54 expr: expr GE • expr

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 112


State 87

   50 expr: expr GT • expr

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 113


State 88

   53 expr: expr LE • expr

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 114


State 89

   49 expr: expr LT • expr

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 115


State 90

   59 expr: expr MOD • expr

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 116


State 91

   52 expr: expr NE • expr

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 117


State 92

   48 expr: expr AND • expr

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 118


State 93

   47 expr: expr OR • expr

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 119


State 94

   30 statement: FOR LBRACE statement2 • RBRACE
   38 statement2: statement2 • statement SEMICOLON

    error       shift, and go to state 41
    LBRACE      shift, and go to state 43
    RBRACE      shift, and go to state 120
    RETURN      shift, and go to state 45
    FOR         shift, and go to state 46
    IF          shift, and go to state 47
    PRINT       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    statement       go to state 75
    parseargs       go to state 52
    funcinvocation  go to state 53


State 95

   29 statement: FOR expr LBRACE • statement2 RBRACE

    $default  reduce using rule 39 (statement2)

    statement2  go to state 121


State 96

   27 statement: IF expr LBRACE • statement2 RBRACE ELSE LBRACE statement2 RBRACE
   28          | IF expr LBRACE • statement2 RBRACE

    $default  reduce using rule 39 (statement2)

    statement2  go to state 122


State 97

   36 statement: PRINT LPAR STRLIT • RPAR

    RPAR  shift, and go to state 123


State 98

   35 statement: PRINT LPAR expr • RPAR
   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    EQ     shift, and go to state 85
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93
    RPAR   shift, and go to state 124


State 99

   40 parseargs: IDENTIFIER COMMA BLANKID • ASSIGN PARSEINT LPAR CMDARGS LSQ expr RSQ RPAR
   41          | IDENTIFIER COMMA BLANKID • ASSIGN PARSEINT LPAR error RPAR

    ASSIGN  shift, and go to state 125


State 100

   25 statement: IDENTIFIER ASSIGN expr •
   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    EQ     shift, and go to state 85
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93

    $default  reduce using rule 25 (statement)


State 101

   44 funcinvocation: IDENTIFIER LPAR error • RPAR

    RPAR  shift, and go to state 126


State 102

   43 funcinvocation: IDENTIFIER LPAR RPAR •

    $default  reduce using rule 43 (funcinvocation)


State 103

   42 funcinvocation: IDENTIFIER LPAR expr • funcinvocation2 RPAR
   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    EQ     shift, and go to state 85
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93

    $default  reduce using rule 46 (funcinvocation2)

    funcinvocation2  go to state 127


State 104

   38 statement2: statement2 statement SEMICOLON •

    $default  reduce using rule 38 (statement2)


State 105

   68 expr: LPAR error RPAR •

    $default  reduce using rule 68 (expr)


State 106

   67 expr: LPAR expr RPAR •

    $default  reduce using rule 67 (expr)


State 107

   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   57     | expr STAR expr •
   58     | expr • DIV expr
   59     | expr • MOD expr

    $default  reduce using rule 57 (expr)


State 108

   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   58     | expr DIV expr •
   59     | expr • MOD expr

    $default  reduce using rule 58 (expr)


State 109

   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   56     | expr MINUS expr •
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr

    STAR  shift, and go to state 81
    DIV   shift, and go to state 82
    MOD   shift, and go to state 90

    $default  reduce using rule 56 (expr)


State 110

   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   55     | expr PLUS expr •
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr

    STAR  shift, and go to state 81
    DIV   shift, and go to state 82
    MOD   shift, and go to state 90

    $default  reduce using rule 55 (expr)


State 111

   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   51     | expr EQ expr •
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 90

    $default  reduce using rule 51 (expr)


State 112

   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   54     | expr GE expr •
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 90

    $default  reduce using rule 54 (expr)


State 113

   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   50     | expr GT expr •
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 90

    $default  reduce using rule 50 (expr)


State 114

   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   53     | expr LE expr •
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 90

    $default  reduce using rule 53 (expr)


State 115

   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   49     | expr LT expr •
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 90

    $default  reduce using rule 49 (expr)


State 116

   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr
   59     | expr MOD expr •

    $default  reduce using rule 59 (expr)


State 117

   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   52     | expr NE expr •
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    MOD    shift, and go to state 90

    $default  reduce using rule 52 (expr)


State 118

   47 expr: expr • OR expr
   48     | expr • AND expr
   48     | expr AND expr •
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    EQ     shift, and go to state 85
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91

    $default  reduce using rule 48 (expr)


State 119

   47 expr: expr • OR expr
   47     | expr OR expr •
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    EQ     shift, and go to state 85
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92

    $default  reduce using rule 47 (expr)


State 120

   30 statement: FOR LBRACE statement2 RBRACE •

    $default  reduce using rule 30 (statement)


State 121

   29 statement: FOR expr LBRACE statement2 • RBRACE
   38 statement2: statement2 • statement SEMICOLON

    error       shift, and go to state 41
    LBRACE      shift, and go to state 43
    RBRACE      shift, and go to state 128
    RETURN      shift, and go to state 45
    FOR         shift, and go to state 46
    IF          shift, and go to state 47
    PRINT       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    statement       go to state 75
    parseargs       go to state 52
    funcinvocation  go to state 53


State 122

   27 statement: IF expr LBRACE statement2 • RBRACE ELSE LBRACE statement2 RBRACE
   28          | IF expr LBRACE statement2 • RBRACE
   38 statement2: statement2 • statement SEMICOLON

    error       shift, and go to state 41
    LBRACE      shift, and go to state 43
    RBRACE      shift, and go to state 129
    RETURN      shift, and go to state 45
    FOR         shift, and go to state 46
    IF          shift, and go to state 47
    PRINT       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    statement       go to state 75
    parseargs       go to state 52
    funcinvocation  go to state 53


State 123

   36 statement: PRINT LPAR STRLIT RPAR •

    $default  reduce using rule 36 (statement)


State 124

   35 statement: PRINT LPAR expr RPAR •

    $default  reduce using rule 35 (statement)


State 125

   40 parseargs: IDENTIFIER COMMA BLANKID ASSIGN • PARSEINT LPAR CMDARGS LSQ expr RSQ RPAR
   41          | IDENTIFIER COMMA BLANKID ASSIGN • PARSEINT LPAR error RPAR

    PARSEINT  shift, and go to state 130


State 126

   44 funcinvocation: IDENTIFIER LPAR error RPAR •

    $default  reduce using rule 44 (funcinvocation)


State 127

   42 funcinvocation: IDENTIFIER LPAR expr funcinvocation2 • RPAR
   45 funcinvocation2: funcinvocation2 • COMMA expr

    COMMA  shift, and go to state 131
    RPAR   shift, and go to state 132


State 128

   29 statement: FOR expr LBRACE statement2 RBRACE •

    $default  reduce using rule 29 (statement)


State 129

   27 statement: IF expr LBRACE statement2 RBRACE • ELSE LBRACE statement2 RBRACE
   28          | IF expr LBRACE statement2 RBRACE •

    ELSE  shift, and go to state 133

    $default  reduce using rule 28 (statement)


State 130

   40 parseargs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT • LPAR CMDARGS LSQ expr RSQ RPAR
   41          | IDENTIFIER COMMA BLANKID ASSIGN PARSEINT • LPAR error RPAR

    LPAR  shift, and go to state 134


State 131

   45 funcinvocation2: funcinvocation2 COMMA • expr

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 135


State 132

   42 funcinvocation: IDENTIFIER LPAR expr funcinvocation2 RPAR •

    $default  reduce using rule 42 (funcinvocation)


State 133

   27 statement: IF expr LBRACE statement2 RBRACE ELSE • LBRACE statement2 RBRACE

    LBRACE  shift, and go to state 136


State 134

   40 parseargs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR • CMDARGS LSQ expr RSQ RPAR
   41          | IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR • error RPAR

    error    shift, and go to state 137
    CMDARGS  shift, and go to state 138


State 135

   45 funcinvocation2: funcinvocation2 COMMA expr •
   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    EQ     shift, and go to state 85
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93

    $default  reduce using rule 45 (funcinvocation2)


State 136

   27 statement: IF expr LBRACE statement2 RBRACE ELSE LBRACE • statement2 RBRACE

    $default  reduce using rule 39 (statement2)

    statement2  go to state 139


State 137

   41 parseargs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR error • RPAR

    RPAR  shift, and go to state 140


State 138

   40 parseargs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS • LSQ expr RSQ RPAR

    LSQ  shift, and go to state 141


State 139

   27 statement: IF expr LBRACE statement2 RBRACE ELSE LBRACE statement2 • RBRACE
   38 statement2: statement2 • statement SEMICOLON

    error       shift, and go to state 41
    LBRACE      shift, and go to state 43
    RBRACE      shift, and go to state 142
    RETURN      shift, and go to state 45
    FOR         shift, and go to state 46
    IF          shift, and go to state 47
    PRINT       shift, and go to state 48
    IDENTIFIER  shift, and go to state 49

    statement       go to state 75
    parseargs       go to state 52
    funcinvocation  go to state 53


State 140

   41 parseargs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR error RPAR •

    $default  reduce using rule 41 (parseargs)


State 141

   40 parseargs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ • expr RSQ RPAR

    MINUS       shift, and go to state 56
    PLUS        shift, and go to state 57
    LPAR        shift, and go to state 58
    NOT         shift, and go to state 59
    IDENTIFIER  shift, and go to state 60
    NATURAL     shift, and go to state 61
    DECIMAL     shift, and go to state 62

    funcinvocation  go to state 63
    expr            go to state 143


State 142

   27 statement: IF expr LBRACE statement2 RBRACE ELSE LBRACE statement2 RBRACE •

    $default  reduce using rule 27 (statement)


State 143

   40 parseargs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ expr • RSQ RPAR
   47 expr: expr • OR expr
   48     | expr • AND expr
   49     | expr • LT expr
   50     | expr • GT expr
   51     | expr • EQ expr
   52     | expr • NE expr
   53     | expr • LE expr
   54     | expr • GE expr
   55     | expr • PLUS expr
   56     | expr • MINUS expr
   57     | expr • STAR expr
   58     | expr • DIV expr
   59     | expr • MOD expr

    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MINUS  shift, and go to state 83
    PLUS   shift, and go to state 84
    EQ     shift, and go to state 85
    GE     shift, and go to state 86
    GT     shift, and go to state 87
    LE     shift, and go to state 88
    LT     shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91
    AND    shift, and go to state 92
    OR     shift, and go to state 93
    RSQ    shift, and go to state 144


State 144

   40 parseargs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ expr RSQ • RPAR

    RPAR  shift, and go to state 145


State 145

   40 parseargs: IDENTIFIER COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ expr RSQ RPAR •

    $default  reduce using rule 40 (parseargs)
